scale_x_discrete() +
# Other useful scale_ variants are scale_x_datetime, scale_x_discrete
# Makes background white, looks a little cleaner
theme_bw()
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = 1000) +
# Other useful scale_ variants are scale_x_datetime, scale_x_discrete
# Makes background white, looks a little cleaner
theme_bw()
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g), max(df$body_mass_g), by = 0.5),1)) +
# Other useful scale_ variants are scale_x_datetime, scale_x_discrete
# Makes background white, looks a little cleaner
theme_bw()
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE), max(df$body_mass_g, na.rm = TRUE), by = 0.5),1)) +
# Other useful scale_ variants are scale_x_datetime, scale_x_discrete
# Makes background white, looks a little cleaner
theme_bw()
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE)/100, max(df$body_mass_g, na.rm = TRUE)/100, by = 0.5),1)) +
# Other useful scale_ variants are scale_x_datetime, scale_x_discrete
# Makes background white, looks a little cleaner
theme_bw()
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE)/10, max(df$body_mass_g, na.rm = TRUE)/10, by = 0.5),1)) +
# Other useful scale_ variants are scale_x_datetime, scale_x_discrete
# Makes background white, looks a little cleaner
theme_bw()
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE), max(df$body_mass_g, na.rm = TRUE), by = 100),1)) +
# Other useful scale_ variants are scale_x_datetime, scale_x_discrete
# Makes background white, looks a little cleaner
theme_bw()
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE), max(df$body_mass_g, na.rm = TRUE), by = 1000),1)) +
# Other useful scale_ variants are scale_x_datetime, scale_x_discrete
# Makes background white, looks a little cleaner
theme_bw()
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE), max(df$body_mass_g, na.rm = TRUE), by = 500),1)) +
# Other useful scale_ variants are scale_x_datetime, scale_x_discrete
# Makes background white, looks a little cleaner
theme_bw()
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE), max(df$body_mass_g, na.rm = TRUE), by = 500),1)) +
# Increase the number of y-axis ticks
scale_y_continuous(breaks = round(seq(min(df$bill_length_mm, na.rm = TRUE), max(df$bill_length_mm, na.rm = TRUE), by = 500),1)) +
# Other useful scale_ variants are scale_x_datetime, scale_x_discrete
# Makes background white, looks a little cleaner
theme_bw()
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE), max(df$body_mass_g, na.rm = TRUE), by = 500),1)) +
# Increase the number of y-axis ticks
scale_y_continuous(breaks = round(seq(min(df$bill_length_mm, na.rm = TRUE), max(df$bill_length_mm, na.rm = TRUE), by = 10),1)) +
# Other useful scale_ variants are scale_x_datetime, scale_x_discrete
# Makes background white, looks a little cleaner
theme_bw()
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE), max(df$body_mass_g, na.rm = TRUE), by = 500),1)) +
# Increase the number of y-axis ticks
scale_y_continuous(breaks = round(seq(min(df$bill_length_mm, na.rm = TRUE), max(df$bill_length_mm, na.rm = TRUE), by = 5),1)) +
# Other useful scale_ variants are scale_x_datetime, scale_x_discrete
# Makes background white, looks a little cleaner
theme_bw()
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE), max(df$body_mass_g, na.rm = TRUE), by = 500),1)) +
# Increase the number of y-axis ticks
scale_y_continuous(breaks = round(seq(min(df$bill_length_mm, na.rm = TRUE), max(df$bill_length_mm, na.rm = TRUE), by = 1),1)) +
# Other useful scale_ variants are scale_x_datetime, scale_x_discrete
# Makes background white, looks a little cleaner
theme_bw()
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE), max(df$body_mass_g, na.rm = TRUE), by = 500),1)) +
# Increase the number of y-axis ticks
scale_y_continuous(breaks = round(seq(min(df$bill_length_mm, na.rm = TRUE), max(df$bill_length_mm, na.rm = TRUE), by = 5),1)) +
# Other useful scale_ variants are scale_x_datetime, scale_x_discrete
# Makes background white, looks a little cleaner
theme_bw()
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
p <- ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE), max(df$body_mass_g, na.rm = TRUE), by = 500),1)) +
# Increase the number of y-axis ticks
scale_y_continuous(breaks = round(seq(min(df$bill_length_mm, na.rm = TRUE), max(df$bill_length_mm, na.rm = TRUE), by = 5),1)) +
# Makes background white, looks a little cleaner
theme_bw()
p
p_simple
# Basic plot
p_simple <- ggplot(df, aes(x = bill_length_mm, y = body_mass_g, color = species)) +
# Include a "+" symbol at the end of each line when adding additional components
geom_point()
p_simple
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
p <- ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE), max(df$body_mass_g, na.rm = TRUE), by = 500),1)) +
# Increase the number of y-axis ticks
scale_y_continuous(breaks = round(seq(min(df$bill_length_mm, na.rm = TRUE), max(df$bill_length_mm, na.rm = TRUE), by = 5),1)) +
# Makes background white, looks a little cleaner
theme_bw()
p
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
p <- ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE), max(df$body_mass_g, na.rm = TRUE), by = 500),1)) +
# Increase the number of y-axis ticks
scale_y_continuous(breaks = round(seq(min(df$bill_length_mm, na.rm = TRUE), max(df$bill_length_mm, na.rm = TRUE), by = 5),1)) +
# Makes background white, looks a little cleaner
theme_bw()
p
# Facet data by species
p
# Facet data by species
p <- facet_wrap(vars(species))
p
# Facet data by species
facet_plot <- facet_wrap(vars(species))
facet_plot
# Facet data by species
facet_plot <- facet_wrap(vars(species), scales = "free-y")
# Facet data by species
facet_plot <- facet_wrap(vars(species), scales = "freey")
# Facet data by species
facet_plot <- facet_wrap(vars(species), scales = "free_y")
facet_plot
# Facet data by species
facet_plot <- facet_wrap(facets = "species", scales = "free_y")
facet_plot
# Facet data by species
facet_plot <- facet_wrap(facets = "species", scales = "free_y")
facet_plot
# Facet data by species
facet_plot <- facet_wrap(facets = df$species, scales = "free_y")
facet_plot
class(facet_plot)
class(p)
# Additional features to make the plot look prettier
# Change the shapes of the dots of each species
p <- ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species, shape = species)) +
geom_point() +
# Add trend line, with method = linear regression (lm = linear model)
geom_smooth(method = lm, se=FALSE) +
# Add a title
ggtitle(paste0("Body Mass (g) vs. Bill Length (mm)")) +
# Increase the number of x-axis ticks
scale_x_continuous(breaks = round(seq(min(df$body_mass_g, na.rm = TRUE), max(df$body_mass_g, na.rm = TRUE), by = 500),1)) +
# Increase the number of y-axis ticks
scale_y_continuous(breaks = round(seq(min(df$bill_length_mm, na.rm = TRUE), max(df$bill_length_mm, na.rm = TRUE), by = 5),1)) +
# Makes background white, looks a little cleaner
theme_bw()
p
# Facet data by species
facet_plot <- p + facet_wrap(facets = df$species, scales = "free_y")
facet_plot
# Facet data by species
facet_plot <- p +
# Facet data based on penguin species
# Scales options are: "fixed", "free", "free_x", "free_y" - fixed = default
facet_wrap(facets = df$species, scales = "fixed") +
# Format the text at the bottom of the plots so that it's at a 45 degree angle
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
facet_plot
library(shiny)
shinyUI(fluidPage(
# App title
titlePanel("Simple Shiny App"),
# Sidebar layout with input and output definitions
sidebarLayout(
# Sidebar panel for inputs
sidebarPanel(
# Add input controls here
),
# Main panel for displaying outputs
mainPanel(
plotOutput("distPlot")
)
)
))
shinyServer(function(input, output) {
output$distPlot <- renderPlot({
plot(mtcars$wt, mtcars$mpg)
})
})
install.packages("shinylive")
install.packages("shinylive")
mtcars
c(unique(df$species))
c(unique(as.list(df$species))))
c(unique(as.list(df$species)))
penguin species
penguin_species
penguin_species <- unique(df$species)
penguin_species
# Make df long
mets <- colnames(df)
mets
long_data <- gather(df, metric, value, mets, factor_key = TRUE)
library(tidyr)
long_data <- gather(df, metric, value, mets, factor_key = TRUE)
View(long_data)
long_data <- gather(df, metric, value, mets, factor_key = TRUE)
mets
long_data <- gather(df, metric, value, mets[c(2:5),], factor_key = TRUE)
long_data <- gather(df, metric, value, mets[c(2:5)], factor_key = TRUE)
mets
mets[c(2:5)]
mets[c(2:5),]
long_data <- gather(df, metric, value, bill_length_mm:body_mass_g, factor_key = TRUE)
View(long_data)
penguin_summary <- Rmisc::summarySE(long_data, measurevar = "value", groupvars = c(mets))
penguin_species <- unique(df$species)
# Make df long
mets <- colnames(df)
long_data <- gather(df, metric, value, bill_length_mm:body_mass_g, factor_key = TRUE)
penguin_summary <- Rmisc::summarySE(long_data, measurevar = "value", groupvars = c(mets))
View(long_data)
penguin_summary <- Rmisc::summarySE(long_data, measurevar = "value", groupvars = c("species", "island", "sex", "year"))
View(penguin_summary)
penguin_summary <- Rmisc::summarySE(long_data, measurevar = "value", groupvars = c("species"))
View(penguin_summary)
# Make df long
mets <- colnames(df)
long_data <- gather(df, metric, value, bill_length_mm:body_mass_g, factor_key = TRUE)
penguin_summary <- Rmisc::summarySE(long_data, measurevar = "value", groupvars = c("species"))
View(penguin_summary)
penguin_summary <- Rmisc::summarySE(long_data, measurevar = "value", groupvars = c("species"), na.rm = TRUE)
View(penguin_summary)
View(penguin_summary)
View(long_data)
penguin_summary <- Rmisc::summarySE(long_data, measurevar = "value", groupvars = c("species", "body_weight_g"), na.rm = TRUE)
unique(long_data$value)
View(long_data)
penguin_summary <- Rmisc::summarySE(long_data, measurevar = "value", groupvars = c("species", "metric"), na.rm = TRUE)
View(penguin_summary)
penguin_summary <- Rmisc::summarySE(long_data, measurevar = "value", groupvars = c("species", "metric", "year"), na.rm = TRUE)
View(penguin_summary)
unique(penguin_summary$species)
penguin_species
penguin_summary$species
penguin_species <- unique(penguin_summary$species)
penguin_species
penguin_summary$metric
penguin_species <- as.list(penguin_species)
class(penguin_species)
library(tidyr)
# Make df long
mets <- colnames(df)
long_data <- gather(df, metric, value, bill_length_mm:body_mass_g, factor_key = TRUE)
penguin_summary <- Rmisc::summarySE(long_data, measurevar = "value", groupvars = c("species", "metric", "year"), na.rm = TRUE)
penguin_species <- unique(penguin_summary$species)
R.home("bin")
dir(R.home("bin"), pattern = "shinylive-r")
remove.packages("shinylive")
getwd()
install.packages("shinylive")
colnames(df)
---
title: "Getting to know ggplot2"
---
title: "Getting to know ggplot2"
---
title: "Getting to know ggplot2"
---
title: "Getting to know ggplot2"
# Want to plot average size of each variety of penguin in a specific year - bar plot
library(Rmisc)
summ_data <- summarySE(data = df, measurevar = "body_weight_g", groupvars = c("species", "year", "sex"))
colnames(df)
# Want to plot average size of each variety of penguin in a specific year - bar plot
library(Rmisc)
summ_data <- summarySE(data = df, measurevar = "body_mass_g", groupvars = c("species", "year", "sex"))
View(summ_data)
# Want to plot average size of each variety of penguin in a specific year - bar plot
library(Rmisc) summ_data <- summarySE(data = df, measurevar = "body_mass_g", groupvars = c("species", "year", "sex"))
# Want to plot average size of each variety of penguin in a specific year - bar plot
library(Rmisc)
summ_data <- summarySE(data = df, measurevar = "body_mass_g", groupvars = c("species", "year", "sex"))
# Filter data to only include data from 2007
filtered_data <- summ_data %>%
dplyr::filter(year == "2007")
# Filter data to only include data from 2007
filtered_data <- summ_data %>%
dplyr::filter(year == "2007")
library(magrittr)
# Filter data to only include data from 2007
filtered_data <- summ_data %>%
dplyr::filter(year == "2007")
View(filtered_data)
# Filter data to only include data from 2007 for female penguins
filtered_data <- summ_data %>%
dplyr::filter(year == "2007" & sex == "female")
View(filtered_data)
ggplot(summ_data, aes(x = species, y = body_mass_g))+
geom_bar()
library(ggplot2)
# Want to plot average size of each variety of penguin in a specific year - bar plot
library(Rmisc)
library(magrittr)
library(ggplot2)
# Need to summarize data
summ_data <- summarySE(data = df, measurevar = "body_mass_g", groupvars = c("species", "year", "sex"))
# Filter data to only include data from 2007 for female penguins
filtered_data <- summ_data %>%
dplyr::filter(year == "2007" & sex == "female")
ggplot(summ_data, aes(x = species, y = body_mass_g))+
geom_bar()
ggplot(summ_data, aes(x = species, y = body_mass_g, fill = species)) +
geom_bar()
ggplot(summ_data, aes(species, body_mass_g, fill = species)) +
geom_bar()
ggplot(summ_data, aes(species, body_mass_g, fill = species)) +
geom_bar(stat = "identity")
ggplot(summ_data, aes(species, body_mass_g, fill = species)) +
geom_bar(stat = "identity") +
theme_bw
ggplot(summ_data, aes(species, body_mass_g, fill = species)) +
geom_bar(stat = "identity") +
theme_bw()
ggplot(summ_data, aes(species, body_mass_g, fill = species)) +
geom_bar(stat="identity", color="black", position=position_dodge(), size = 0.5, width = 0.5) +
theme_bw()
View(filtered_data)
ggplot(summ_data, aes(species, body_mass_g)) +
geom_bar(stat="identity", color="black", position=position_dodge(), size = 0.5, width = 0.5) +
theme_bw()
ggplot(summ_data, aes(species, body_mass_g, fill = species)) +
geom_bar(stat="identity", color="black", position=position_dodge(), size = 0.5, width = 0.5) +
theme_bw()
ggplot(summ_data, aes(x = species, y= body_mass_g, fill = species)) +
geom_bar(stat="identity", color="black", position=position_dodge(), size = 0.5, width = 0.5) +
theme_bw()
ggplot(summ_data, aes(x = species, y= body_mass_g, fill = species)) +
geom_bar(stat="identity") +
theme_bw()
ggplot(summ_data, aes(x = species, y= body_mass_g, fill = species)) +
geom_bar(stat="identity", color="black", position=position_dodge(), size = 0.5, width = 0.5) +
theme_bw()
ggplot(summ_data, aes(x = species, y= body_mass_g, fill = species)) +
geom_bar(stat="identity", color="black", size = 0.5, width = 0.5) +
theme_bw()
ggplot(summ_data, aes(x = species, y= body_mass_g, fill = species)) +
geom_bar(stat="identity", color="black", position=position_dodge(), size = 0.5, width = 0.5) +
theme_bw()
View(filtered_data)
ggplot(filtered_data, aes(x = species, y= body_mass_g, fill = species)) +
geom_bar(stat="identity", color="black", position=position_dodge(), size = 0.5, width = 0.5) +
theme_bw()
ggplot(filtered_data, aes(x = species, y= body_mass_g, fill = species)) +
geom_bar(stat="identity", color="black", position=position_dodge(), size = 0.5, width = 0.5) +
# Add error bars
geom_errorbar(aes(ymin=body_mass_g- se, ymax=body_mass_g+ se), width=.1, position=position_dodge(.9)) +
theme_bw()
ggplot(filtered_data, aes(x = species, y= body_mass_g, fill = species)) +
geom_bar(stat="identity", color="black", position=position_dodge(), size = 0.5, width = 0.5) +
# Add error bars
geom_errorbar(aes(ymin=body_mass_g - se, ymax=body_mass_g + se), width=.1, position=position_dodge(.1)) +
theme_bw()
ggplot(filtered_data, aes(x = species, y= body_mass_g, fill = species)) +
geom_bar(stat="identity", color="black", position=position_dodge(), size = 0.5, width = 0.5) +
# Add error bars
geom_errorbar(aes(ymin=body_mass_g - se, ymax=body_mass_g + se), width=.1, position=position_dodge(.9)) +
theme_bw()
ggplot(filtered_data, aes(x = species, y= body_mass_g, fill = species)) +
geom_bar(stat="identity", color="black", position=position_dodge(), size = 0.5, width = 0.5) +
# Add error bars
geom_errorbar(aes(ymin=body_mass_g - se, ymax=body_mass_g + se), width=.1) +
theme_bw()
library(plotly)
ggplotly(facet_plot)
choices
choices <- c(unique(filtered_data$year))
choices
choices <- c(unique(summ_data$year))
choices
filtered_data
df
View(df)
View(summ_data)
colnames(df)
df$sex
class(df$year)
shiny::runApp('test_penguins')
runApp('test_penguins')
runApp('test_penguins')
# Basic plot
p_simple <- ggplot(df, aes(x = body_mass_g, y = bill_length_mm, color = species)) +
# Include a "+" symbol at the end of each line when adding additional components
geom_point()
